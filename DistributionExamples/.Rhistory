?pow
??pow
?expand.model.frame
?exp
contentRes <- distribute(uniformPreferences, 0, rev(exp(courses,2)-exp(courses:1,2)))
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten')
barplot(t(aggregationMatrix(normalPreferences)))
contentRes <- distribute(normalPreferences, 0, courses:1)
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten')
min <- contentRes$min +1
contentRes <- distribute(normalPreferences, min, courses:1)
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten')
contentRes <- distribute(normalPreferences, 0, rev(exp(courses,2)-exp(courses:1,2)))
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten')
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer', legend='Lineare Gewichte ohne Minimum')
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer', title='Lineare Gewichte ohne Minimum')
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer', legend.text='Lineare Gewichte ohne Minimum')
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer', title='Lineare Gewichte ohne Minimum')
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer', lab='Lineare Gewichte ohne Minimum')
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer', annotation='Lineare Gewichte ohne Minimum')
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer')
title('Lineare Gewichte ohne Minimum')
barplot(t(aggregationMatrix(uniformPreferences)))
contentRes <- distribute(uniformPreferences, 0, courses:1)
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer')
title('Kurshistogramm - Lineare Gewichte ohne Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten')
title('Präferenzhistogramm - Lineare Gewichte ohne Minimum')
min <- contentRes$min +1
contentRes <- distribute(uniformPreferences, min, courses:1)
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer')
title(cat('Lineare Gewichte mit Minimum ',min))
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten')
title(cat('Lineare Gewichte mit Minimum ',min))
title('Präferenzhistogramm - Lineare Gewichte ohne Minimum')
title(curTitle)
curTitle <- cat('Lineare Gewichte mit Minimum ',min)
title(curTitle)
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer')
title(curTitle)
barplot(t(aggregationMatrix(uniformPreferences)))
contentRes <- distribute(uniformPreferences, 0, courses:1)
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer')
title('Kurshistogramm - Lineare Gewichte ohne Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten')
title('Präferenzhistogramm - Lineare Gewichte ohne Minimum')
min <- contentRes$min +1
contentRes <- distribute(uniformPreferences, min, courses:1)
title('Lineare Gewichte mit Minimum')
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer')
title('Lineare Gewichte mit Minimum')
contentRes <- distribute(uniformPreferences, min, courses:1)
contentRes <- distribute(uniformPreferences, 0, courses:1)
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer')
title('Kurshistogramm - Lineare Gewichte ohne Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten')
title('Präferenzhistogramm - Lineare Gewichte ohne Minimum')
min <- contentRes$min +1
contentRes <- distribute(uniformPreferences, min, courses:1)
title('Lineare Gewichte mit Minimum')
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer')
title('Lineare Gewichte mit Minimum')
barplot(t(aggregationMatrix(uniformPreferences)))
contentRes <- distribute(uniformPreferences, 0, courses:1)
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer')
title('Kurshistogramm - Lineare Gewichte ohne Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten')
title('Präferenzhistogramm - Lineare Gewichte ohne Minimum')
min <- contentRes$min +1
contentRes <- distribute(uniformPreferences, min, courses:1)
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer')
title('Lineare Gewichte mit Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten')
title('Lineare Gewichte mit Minimum')
contentRes <- distribute(uniformPreferences, 0, rev(exp(courses,2)-exp(courses:1,2)))
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer')
title('Exponentielle Gewichte ohne Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten')
title('Exponentielle Gewichte ohne Minimum')
barplot(t(aggregationMatrix(uniformPreferences)))
contentRes <- distribute(uniformPreferences, 0, courses:1)
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer')
title('Kurshistogramm - Lineare Gewichte ohne Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten')
title('Präferenzhistogramm - Lineare Gewichte ohne Minimum')
min <- contentRes$min +1
contentRes <- distribute(uniformPreferences, min, courses:1)
contentRes <- distribute(uniformPreferences, min, courses:1)
min
distribute <- function(elections, lowest, weights) {
requestBody <- '{
"courses" : {';
for( i in 1:courses) {
id = i;
min = 0;
max = maxPerCourse;
requestBody <- paste0(requestBody,'"',id,'" : { "id": ', id, ', "min":', min, ',"max": ', max,'}')
if(i < courses) {
requestBody <- paste0(requestBody, ',');
} else {
requestBody <- paste0(requestBody, '},');
}
}
requestBody <- paste0(requestBody,
'"elections" :', toJSON(elections),',
"params" : {
"lowest": ',lowest,',
"weights" :', toJSON(weights), '
}
}');
requestBody
res <- httr::POST(url = url,
httr::add_headers('Content-Type' = 'application/json'),
httr::add_headers('Accept' = 'application/json'),
body = requestBody,
encode = "json")
return(content(res))
}
contentRes <- distribute(uniformPreferences, min, courses:1)
length(contentRes)
barplot(t(aggregationMatrix(uniformPreferences)))
contentRes <- distribute(uniformPreferences, 0, courses:1)
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer')
title('Kurshistogramm - Lineare Gewichte ohne Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten')
title('Präferenzhistogramm - Lineare Gewichte ohne Minimum')
min <- contentRes$min +1
contentRes <- distribute(uniformPreferences, min, courses:1)
if(length(contentRes) > 1) {
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer')
title('Lineare Gewichte mit Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten')
title('Lineare Gewichte mit Minimum')
}
contentRes <- distribute(uniformPreferences, 0, rev(exp(courses,2)-exp(courses:1,2)))
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer')
title('Exponentielle Gewichte ohne Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten')
title('Exponentielle Gewichte ohne Minimum')
barplot(t(aggregationMatrix(uniformPreferences)))
contentRes <- distribute(uniformPreferences, 0, courses:1)
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer')
title('Kurshistogramm - Lineare Gewichte ohne Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten')
title('Präferenzhistogramm - Lineare Gewichte ohne Minimum')
min <- contentRes$min +1
contentRes <- distribute(uniformPreferences, min, courses:1)
if(length(contentRes) > 1) {
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer')
title('Lineare Gewichte mit Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten')
title('Lineare Gewichte mit Minimum')
}
contentRes <- distribute(uniformPreferences, 0, rev(exp(courses,2)-exp(courses:1,2)))
rev(exp(courses,2)-exp(courses:1,2))
rev(exp(courses)-exp(courses:1))
contentRes <- distribute(uniformPreferences, 0, rev(exp(courses)-exp(courses:1)))
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer')
title('Exponentielle Gewichte ohne Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten')
title('Exponentielle Gewichte ohne Minimum')
exp(courses,2)
2^courses
2^courses:1
2^(courses:1)
rev(2^courses-2^(courses:1))
contentRes <- distribute(uniformPreferences, 0, rev(2^courses-2^(courses:1))
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer')
title('Exponentielle Gewichte ohne Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten')
title('Exponentielle Gewichte ohne Minimum')
contentRes <- distribute(uniformPreferences, 0, rev(2^courses-2^(courses:1)))
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer')
title('Exponentielle Gewichte ohne Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten')
title('Exponentielle Gewichte ohne Minimum')
elections = c(uniformPreferences, normalPreferences)
elections = c(list(uniformPreferences), list(normalPreferences))
preferencesList = c(list(uniformPreferences), list(normalPreferences))
elections = preferencesList[[i]]
for(i in 1:2 ) {
elections = preferencesList[[i]]
barplot(t(aggregationMatrix(elections)))
contentRes <- distribute(elections, 0, courses:1)
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer')
title('Kurshistogramm - Lineare Gewichte ohne Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten')
title('Präferenzhistogramm - Lineare Gewichte ohne Minimum')
min <- contentRes$min +1
contentRes <- distribute(elections, min, courses:1)
if(length(contentRes) > 1) {
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer')
title('Kurshistogramm - Lineare Gewichte mit Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten')
title('Präferenzhistogramm - Lineare Gewichte mit Minimum')
}
contentRes <- distribute(elections, 0, rev(2^courses-2^(courses:1)))
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer')
title('Kurshistogramm - Exponentielle Gewichte ohne Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten')
title('Präferenzhistogramm - Exponentielle Gewichte ohne Minimum')
}
for(i in 1:2 ) {
elections = preferencesList[[i]]
barplot(t(aggregationMatrix(elections)))
contentRes <- distribute(elections, 0, courses:1)
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer')
title('Kurshistogramm - Lineare Gewichte ohne Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten')
title('Präferenzhistogramm - Lineare Gewichte ohne Minimum')
min <- contentRes$min +1
contentRes <- distribute(elections, min, courses:1)
if(length(contentRes) > 1) {
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer')
title('Kurshistogramm - Lineare Gewichte mit Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten')
title('Präferenzhistogramm - Lineare Gewichte mit Minimum')
}
contentRes <- distribute(elections, 0, rev(2^courses-2^(courses:1)))
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer')
title('Kurshistogramm - Exponentielle Gewichte ohne Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten')
title('Präferenzhistogramm - Exponentielle Gewichte ohne Minimum')
}
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten', col='blue')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten', col='##052e5d')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten', col='#052e5d')
barplot(t(aggregationMatrix(elections)))
preferencesList = list('Gleichverteilte Präferenzen', 'Normalverteilte Präferenzen')
preferencesList = c(list(uniformPreferences), list(normalPreferences))
preferencesListNames = list('Gleichverteilte Präferenzen', 'Normalverteilte Präferenzen')
preferencesList = c(list(uniformPreferences), list(normalPreferences))
preferencesListNames = list('Gleichverteilte Präferenzen', 'Normalverteilte Präferenzen')
for(i in 1:2 ) {
elections = preferencesList[[i]]
barplot(t(aggregationMatrix(elections)))
title(prefencesListNames[[i]])
contentRes <- distribute(elections, 0, courses:1)
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer',col='#052e5d')
title('Kurshistogramm - Lineare Gewichte ohne Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten', col='#052e5d')
title('Präferenzhistogramm - Lineare Gewichte ohne Minimum')
min <- contentRes$min +1
contentRes <- distribute(elections, min, courses:1)
if(length(contentRes) > 1) {
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer', col='#052e5d')
title('Kurshistogramm - Lineare Gewichte mit Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten', col='#052e5d')
title('Präferenzhistogramm - Lineare Gewichte mit Minimum')
}
contentRes <- distribute(elections, 0, rev(2^courses-2^(courses:1)))
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer', col='#052e5d')
title('Kurshistogramm - Exponentielle Gewichte ohne Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten', col='#052e5d')
title('Präferenzhistogramm - Exponentielle Gewichte ohne Minimum')
}
preferencesList = c(list(uniformPreferences), list(normalPreferences))
preferencesListNames = list('Gleichverteilte Präferenzen', 'Normalverteilte Präferenzen')
for(i in 1:2 ) {
elections = preferencesList[[i]]
barplot(t(aggregationMatrix(elections)))
title(preferencesListNames[[i]])
contentRes <- distribute(elections, 0, courses:1)
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer',col='#052e5d')
title('Kurshistogramm - Lineare Gewichte ohne Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten', col='#052e5d')
title('Präferenzhistogramm - Lineare Gewichte ohne Minimum')
min <- contentRes$min +1
contentRes <- distribute(elections, min, courses:1)
if(length(contentRes) > 1) {
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer', col='#052e5d')
title('Kurshistogramm - Lineare Gewichte mit Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten', col='#052e5d')
title('Präferenzhistogramm - Lineare Gewichte mit Minimum')
}
contentRes <- distribute(elections, 0, rev(2^courses-2^(courses:1)))
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer', col='#052e5d')
title('Kurshistogramm - Exponentielle Gewichte ohne Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten', col='#052e5d')
title('Präferenzhistogramm - Exponentielle Gewichte ohne Minimum')
}
barplot(t(aggregationMatrix(elections)), col='#052e5d')
title(preferencesListNames[[i]])
barplot(t(aggregationMatrix(elections)))
title(preferencesListNames[[i]])
barplot(t(aggregationMatrix(elections)), xlab="Kurs")
barplot(t(aggregationMatrix(elections)), xlab="Kurs", xlim=1:15)
barplot(t(aggregationMatrix(elections)), xlab="Kurs", xlim=c(1,15))
barplot(t(aggregationMatrix(elections)), xlab="Kurs", xlim=c(1,5))
barplot(t(aggregationMatrix(elections)), xlab="Kurs", achses=FALSE)
barplot(t(aggregationMatrix(elections)), xlab="Kurs", ,axes=FALSE)
barplot(t(aggregationMatrix(elections)), xlab="Kurs", ,axes=FALSE, ylab="Präferenz")
barplot(t(aggregationMatrix(elections)), xlab="Kurs",axes=FALSE, ylab="Präferenz")
barplot(t(aggregationMatrix(elections)), xlab="Kurs",axes=FALSE, ylab="Präferenz")
title(preferencesListNames[[i]])
barplot(t(aggregationMatrix(elections)), xlab="Kurs",axes=FALSE, ylab="Präferenz - je dunkler desto höher")
for(i in 1:1 ) {
elections = preferencesList[[i]]
barplot(t(aggregationMatrix(elections)), xlab="Kurs",axes=FALSE, ylab="Präferenz - je dunkler desto höher")
title(preferencesListNames[[i]])
contentRes <- distribute(elections, 0, courses:1)
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer',col='#052e5d')
title('Kurshistogramm - Lineare Gewichte ohne Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten', col='#052e5d')
title('Präferenzhistogramm - Lineare Gewichte ohne Minimum')
min <- contentRes$min +1
contentRes <- distribute(elections, min, courses:1)
if(length(contentRes) > 1) {
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer', col='#052e5d')
title('Kurshistogramm - Lineare Gewichte mit Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten', col='#052e5d')
title('Präferenzhistogramm - Lineare Gewichte mit Minimum')
}
contentRes <- distribute(elections, 0, rev(2^courses-2^(courses:1)))
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer', col='#052e5d')
title('Kurshistogramm - Exponentielle Gewichte ohne Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten', col='#052e5d')
title('Präferenzhistogramm - Exponentielle Gewichte ohne Minimum')
}
for(i in 1:1 ) {
elections = preferencesList[[i]]
jpeg(paste0(preferencesListNames[[i]],'.jpg')
barplot(t(aggregationMatrix(elections)), xlab="Kurs",axes=FALSE, ylab="Präferenz - je dunkler desto höher")
title(preferencesListNames[[i]])
contentRes <- distribute(elections, 0, courses:1)
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer',col='#052e5d')
title('Kurshistogramm - Lineare Gewichte ohne Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten', col='#052e5d')
title('Präferenzhistogramm - Lineare Gewichte ohne Minimum')
min <- contentRes$min +1
contentRes <- distribute(elections, min, courses:1)
if(length(contentRes) > 1) {
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer', col='#052e5d')
title('Kurshistogramm - Lineare Gewichte mit Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten', col='#052e5d')
title('Präferenzhistogramm - Lineare Gewichte mit Minimum')
}
contentRes <- distribute(elections, 0, rev(2^courses-2^(courses:1)))
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer', col='#052e5d')
title('Kurshistogramm - Exponentielle Gewichte ohne Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten', col='#052e5d')
title('Präferenzhistogramm - Exponentielle Gewichte ohne Minimum')
dev.off();
}
for(i in 1:1 ) {
elections = preferencesList[[i]]
jpeg(paste0(preferencesListNames[[i]],'.jpg'));
barplot(t(aggregationMatrix(elections)), xlab="Kurs",axes=FALSE, ylab="Präferenz - je dunkler desto höher")
title(preferencesListNames[[i]])
contentRes <- distribute(elections, 0, courses:1)
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer',col='#052e5d')
title('Kurshistogramm - Lineare Gewichte ohne Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten', col='#052e5d')
title('Präferenzhistogramm - Lineare Gewichte ohne Minimum')
min <- contentRes$min +1
contentRes <- distribute(elections, min, courses:1)
if(length(contentRes) > 1) {
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer', col='#052e5d')
title('Kurshistogramm - Lineare Gewichte mit Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten', col='#052e5d')
title('Präferenzhistogramm - Lineare Gewichte mit Minimum')
}
contentRes <- distribute(elections, 0, rev(2^courses-2^(courses:1)))
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer', col='#052e5d')
title('Kurshistogramm - Exponentielle Gewichte ohne Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten', col='#052e5d')
title('Präferenzhistogramm - Exponentielle Gewichte ohne Minimum')
dev.off();
}
for(i in 1:1 ) {
elections = preferencesList[[i]]
pdf(paste0(preferencesListNames[[i]],'.pdf'));
barplot(t(aggregationMatrix(elections)), xlab="Kurs",axes=FALSE, ylab="Präferenz - je dunkler desto höher")
title(preferencesListNames[[i]])
contentRes <- distribute(elections, 0, courses:1)
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer',col='#052e5d')
title('Kurshistogramm - Lineare Gewichte ohne Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten', col='#052e5d')
title('Präferenzhistogramm - Lineare Gewichte ohne Minimum')
min <- contentRes$min +1
contentRes <- distribute(elections, min, courses:1)
if(length(contentRes) > 1) {
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer', col='#052e5d')
title('Kurshistogramm - Lineare Gewichte mit Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten', col='#052e5d')
title('Präferenzhistogramm - Lineare Gewichte mit Minimum')
}
contentRes <- distribute(elections, 0, rev(2^courses-2^(courses:1)))
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer', col='#052e5d')
title('Kurshistogramm - Exponentielle Gewichte ohne Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten', col='#052e5d')
title('Präferenzhistogramm - Exponentielle Gewichte ohne Minimum')
dev.off();
}
for(i in 1:2 ) {
elections = preferencesList[[i]]
pdf(paste0(preferencesListNames[[i]],'.pdf'));
barplot(t(aggregationMatrix(elections)), xlab="Kurs",axes=FALSE, ylab="Präferenz - je dunkler desto höher")
title(preferencesListNames[[i]])
contentRes <- distribute(elections, 0, courses:1)
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer',col='#052e5d')
title('Kurshistogramm - Lineare Gewichte ohne Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten', col='#052e5d')
title('Präferenzhistogramm - Lineare Gewichte ohne Minimum')
min <- contentRes$min +1
contentRes <- distribute(elections, min, courses:1)
if(length(contentRes) > 1) {
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer', col='#052e5d')
title('Kurshistogramm - Lineare Gewichte mit Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten', col='#052e5d')
title('Präferenzhistogramm - Lineare Gewichte mit Minimum')
}
contentRes <- distribute(elections, 0, rev(2^courses-2^(courses:1)))
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer', col='#052e5d')
title('Kurshistogramm - Exponentielle Gewichte ohne Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten', col='#052e5d')
title('Präferenzhistogramm - Exponentielle Gewichte ohne Minimum')
dev.off();
}
for(i in 1:2 ) {
elections = preferencesList[[i]]
pdf(paste0(preferencesListNames[[i]],'.pdf'));
barplot(t(aggregationMatrix(elections)), xlab="Kurs",axes=FALSE, ylab="Präferenz - je dunkler desto höher")
title(preferencesListNames[[i]])
contentRes <- distribute(elections, 0, courses:1)
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer',col='#052e5d')
title('Kurshistogramm - Lineare Gewichte ohne Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten', col='#052e5d')
title('Präferenzhistogramm - Lineare Gewichte ohne Minimum')
min <- contentRes$min +1
contentRes <- distribute(elections, min, courses:1)
if(length(contentRes) > 1) {
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer', col='#052e5d')
title('Kurshistogramm - Lineare Gewichte mit Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten', col='#052e5d')
title('Präferenzhistogramm - Lineare Gewichte mit Minimum')
min <- min + 1
contentRes <- distribute(elections, min, courses:1)
if(length(contentRes) > 1) {
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer', col='#052e5d')
title('Kurshistogramm - Lineare Gewichte mit Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten', col='#052e5d')
title('Präferenzhistogramm - Lineare Gewichte mit Minimum')
min <- min + 1
}
}
contentRes <- distribute(elections, 0, rev(2^courses-2^(courses:1)))
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer', col='#052e5d')
title('Kurshistogramm - Exponentielle Gewichte ohne Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten', col='#052e5d')
title('Präferenzhistogramm - Exponentielle Gewichte ohne Minimum')
dev.off();
}
if(length(contentRes) > 1) {
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer', col='#052e5d')
title('Kurshistogramm - Lineare Gewichte mit Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten', col='#052e5d')
title('Präferenzhistogramm - Lineare Gewichte mit Minimum')
}
contentRes <- distribute(elections, min, courses:1)
contentRes <- distribute(elections, min, courses:1)
if(length(contentRes) > 3) {
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer', col='#052e5d')
title('Kurshistogramm - Lineare Gewichte mit Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten', col='#052e5d')
title('Präferenzhistogramm - Lineare Gewichte mit Minimum')
}
for(i in 1:2 ) {
elections = preferencesList[[i]]
pdf(paste0(preferencesListNames[[i]],'.pdf'));
barplot(t(aggregationMatrix(elections)), xlab="Kurs",axes=FALSE, ylab="Präferenz - je dunkler desto höher")
title(preferencesListNames[[i]])
contentRes <- distribute(elections, 0, courses:1)
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer',col='#052e5d')
title('Kurshistogramm - Lineare Gewichte ohne Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten', col='#052e5d')
title('Präferenzhistogramm - Lineare Gewichte ohne Minimum')
min <- contentRes$min +1
contentRes <- distribute(elections, min, courses:1)
if(length(contentRes) > 3) {
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer', col='#052e5d')
title('Kurshistogramm - Lineare Gewichte mit Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten', col='#052e5d')
title('Präferenzhistogramm - Lineare Gewichte mit Minimum')
min <- min + 1
contentRes <- distribute(elections, min, courses:1)
if(length(contentRes) > 3) {
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer', col='#052e5d')
title('Kurshistogramm - Lineare Gewichte mit Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten', col='#052e5d')
title('Präferenzhistogramm - Lineare Gewichte mit Minimum')
}
}
contentRes <- distribute(elections, 0, rev(2^courses-2^(courses:1)))
barplot(t(as.matrix(contentRes$histCourses)), xlab='Kurs ID', ylab='Anzahl Teilnehmer', col='#052e5d')
title('Kurshistogramm - Exponentielle Gewichte ohne Minimum')
barplot(t(as.matrix(contentRes$histPreferences)), xlab='Präferenz', ylab='Anzahl Studenten', col='#052e5d')
title('Präferenzhistogramm - Exponentielle Gewichte ohne Minimum')
dev.off();
}
barplot(t(aggregationMatrix(elections)), xlab="Kurs",axes=FALSE, ylab="Präferenz - je dunkler desto höher")
dev.off();
barplot(t(aggregationMatrix(elections)), xlab="Kurs",axes=FALSE, ylab="Präferenz - je dunkler desto höher")
barplot(t(aggregationMatrix(elections)), xlab="Kurs",axes=FALSE, ylab="Präferenz - je dunkler desto höher", col=colorRampPalette(c("red","orange","blue"),method="linear"))
colorRampPalette(c("red","orange","blue"),method="linear")
colorRampPalette(c("red","orange","blue"))
barplot(t(aggregationMatrix(elections)), xlab="Kurs",axes=FALSE, ylab="Präferenz - je dunkler desto höher", col=colorRampPalette(c("red","orange","blue")))
